import hashlib
import mysql.connector
import os.path
mydb = mysql.connector.connect(
  host="localhost",
  user="root",
  passwd="Ravi@123",
  database="siganturesdb"
)
from tkinter import *

from tkinter import filedialog

import tkinter.font as font

import os
# import signBasedMD
print("hello world")
# filePath = ""
# Function for opening the
# file explorer window
def browseFiles():
	filename = filedialog.askopenfilename(initialdir = "/",
										title = "Select a File",
										filetypes = (("Text files",
														"*.txt*"),
													("all files",
														"*.*")))
	
	
	label_file_explorer.configure(text="File Opened: "+filename)
	global filePath 
	filePath = filename
	print(filePath+"After browsing")
	return filename

def browseFolder():
	dirname = filedialog.askdirectory(initialdir="/",title="Select a Folder")

	label_file_explorer.configure(text="Folder opened: "+dirname)
	global filePath 
	filePath = dirname
	print(filePath+" After browsing")
	return dirname

def deletefileorfolder():
	filename=browseFiles()
	if(os.path.isfile(filename)):
		os.remove(filename)
	
def search(signature):
	
    mycursor = mydb.cursor()
    query = 'select * from siganturesdb.hash_table where Hashcode = %s;'
    mycursor.execute(query,[signature])
    output = mycursor.fetchall()
    if(len(output)):
        print(output)
        print("is malicious")
        
def readFile():
    print("Inside readifle function")
    BLOCK_SIZE = 65536 
    if(os.path.isfile(filePath)):
        
        file_hash = hashlib.sha256() 
        with open(filePath, 'rb') as f: 
            fb = f.read(BLOCK_SIZE) 
            while len(fb) > 0: 
                file_hash.update(fb) 
                fb = f.read(BLOCK_SIZE) 
        signature = file_hash.hexdigest()
        
        search(signature)
    elif(os.path.isdir(filePath)):
        filesList = os.listdir(filePath)
        print(filesList)
        for i in range(len(filesList)):
            newPath = filePath + "//" + filesList[i]
            if(os.path.isdir(newPath)):
                readFile(newPath)
            else:
                file_hash = hashlib.sha256() 
                with open(newPath, 'rb') as f: 
                    fb = f.read(BLOCK_SIZE) 
                    while len(fb) > 0: 
                        file_hash.update(fb) 
                        fb = f.read(BLOCK_SIZE) 
                signature = file_hash.hexdigest()
                
                search(signature)
    else:
        print("No such file or directory for given path")

print("hello world second time")																								
# Create the root window
window = Tk()

# Set window title
window.title('Malware Detector')

# Set window size
window.geometry("1200x670")
window.resizable(False,False)

img= PhotoImage(file="malwareimg5res.png", master= window)
img_label= Label(window,image=img)
img_label.place(x=0,y=0)
print("hello world third time")
roman20 = font.Font(family="roman",size=20,weight="bold",underline=1)
courier15 = font.Font(family="courier",size=15)
arial10 = font.Font(family="arial",size=15)

frame=Frame(window, width=1000, height=500,bg="black")
frame.place(x=100, y=100)


# frimg= PhotoImage(file="bg2.png", master= frame)
# frimg_label= Label(frame,image=frimg)
# frimg_label.place(x=0,y=0)
# mag_img = PhotoImage(file="mag_glass.png",master=frame)
# mag_img_label=Label(frame,image=mag_img)
# mag_img_label.place(x=200,y=10)

heading = Label(frame,text="Welcome to Malware Detector",fg="green",bg="black",font=roman20)
heading.place(x=320,y=10)

# text = Text(frame, height=8)
# text.pack()
# text.insert('1.0', 'Malware, or malicious software, is any program or file that is intentionally harmful to a computer, network or server')

# body_text_line1 = Label(frame,text="Malware, or malicious software, is any program or file that is intentionally",font=courier15,fg="orange",bg="black" )
# body_text_line2 = Label(frame,text="harmful to a computer, network or server.Types of malware include computer ",fg="orange",font=courier15,bg="black")
# body_text_line3 = Label(frame,text="viruses, worms, Trojan horses, ransomware and spyware.Detect your malware ",font=courier15,bg="black",fg="orange")
# body_text_line4 = Label(frame,text="with our toolfor free.Get rid of viruses and keep your computer secure. ",font=courier15,bg="black",fg="orange")
# body_text_line1.place(x=10,y=100)
# body_text_line2.place(x=10,y=130)
# body_text_line3.place(x=10,y=160)
# body_text_line4.place(x=10,y=190)

del_file_label = Label(frame,text ="Do you want to delete the selected file/folder?",font=courier15,fg="orange",bg="black")
del_file_label.place(x=100,y=130)

del_img = PhotoImage(file="del.png")
button_del = Button(frame,image=del_img)
button_del.place(x=100,y=175)


label_file_explorer = Label(frame,text = "Select the file to scan:",fg = "purple",bg="black",font=arial10)
label_file_explorer.place(x=100,y=250)

label_browse = Label(frame,text="Browse File",bg="black",fg="cyan",font=arial10)
label_browse.place(x=120,y=350)

browse_img = PhotoImage(file="browse.png")
button_explore = Button(frame,image=browse_img,command = browseFiles)
button_explore.place(x=75,y=350)

label_fol = Label(frame,text="Browse Folder",bg="black",fg="cyan",font=arial10)
label_fol.place(x=325,y=350)

brfol_img = PhotoImage(file="brfol.png")
button_exit = Button(frame,image=brfol_img,command=browseFolder)
button_exit.place(x=275,y=350)

label_scan = Label(frame,text="Scan",bg="black",fg="cyan",font=arial10)
label_scan.place(x=525,y=350)
print("hello world fourth time")
scan_img = PhotoImage(file="scan.png")
button_scan = Button(frame,image=scan_img, command=readFile)
button_scan.place(x=475,y=350)
print("Go to hell")
label_exit = Label(frame,text="Exit",bg="black",fg="cyan",font=arial10)
label_exit.place(x=700,y=350)

exit_img = PhotoImage(file="exit.png")
button_exit = Button(frame,image=exit_img,command = exit)
button_exit.place(x=650,y=350)


window.mainloop()

# import os
# file_path = 'New Text Document.txt'
# if os.path.isfile(file_path):
#   os.remove(file_path)
#   print("File has been deleted")
# else:
#   print("File does not exist")